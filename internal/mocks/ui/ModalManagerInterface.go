// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package mocks

import (
	mock "github.com/stretchr/testify/mock"
)

// NewMockModalManagerInterface creates a new instance of MockModalManagerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockModalManagerInterface(t interface {
	mock.TestingT
	Cleanup(func())
},
) *MockModalManagerInterface {
	mock := &MockModalManagerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockModalManagerInterface is an autogenerated mock type for the ModalManagerInterface type
type MockModalManagerInterface struct {
	mock.Mock
}

type MockModalManagerInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockModalManagerInterface) EXPECT() *MockModalManagerInterface_Expecter {
	return &MockModalManagerInterface_Expecter{mock: &_m.Mock}
}

// ShowConfirm provides a mock function for the type MockModalManagerInterface
func (_mock *MockModalManagerInterface) ShowConfirm(s string, fn func(bool)) {
	_mock.Called(s, fn)
	return
}

// MockModalManagerInterface_ShowConfirm_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ShowConfirm'
type MockModalManagerInterface_ShowConfirm_Call struct {
	*mock.Call
}

// ShowConfirm is a helper method to define mock.On call
//   - s string
//   - fn func(bool)
func (_e *MockModalManagerInterface_Expecter) ShowConfirm(s interface{}, fn interface{}) *MockModalManagerInterface_ShowConfirm_Call {
	return &MockModalManagerInterface_ShowConfirm_Call{Call: _e.mock.On("ShowConfirm", s, fn)}
}

func (_c *MockModalManagerInterface_ShowConfirm_Call) Run(run func(s string, fn func(bool))) *MockModalManagerInterface_ShowConfirm_Call {
	_c.Call.Run(func(args mock.Arguments) {
		var arg0 string
		if args[0] != nil {
			arg0 = args[0].(string)
		}
		var arg1 func(bool)
		if args[1] != nil {
			arg1 = args[1].(func(bool))
		}
		run(
			arg0,
			arg1,
		)
	})
	return _c
}

func (_c *MockModalManagerInterface_ShowConfirm_Call) Return() *MockModalManagerInterface_ShowConfirm_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockModalManagerInterface_ShowConfirm_Call) RunAndReturn(run func(s string, fn func(bool))) *MockModalManagerInterface_ShowConfirm_Call {
	_c.Run(run)
	return _c
}

// ShowError provides a mock function for the type MockModalManagerInterface
func (_mock *MockModalManagerInterface) ShowError(err error) {
	_mock.Called(err)
	return
}

// MockModalManagerInterface_ShowError_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ShowError'
type MockModalManagerInterface_ShowError_Call struct {
	*mock.Call
}

// ShowError is a helper method to define mock.On call
//   - err error
func (_e *MockModalManagerInterface_Expecter) ShowError(err interface{}) *MockModalManagerInterface_ShowError_Call {
	return &MockModalManagerInterface_ShowError_Call{Call: _e.mock.On("ShowError", err)}
}

func (_c *MockModalManagerInterface_ShowError_Call) Run(run func(err error)) *MockModalManagerInterface_ShowError_Call {
	_c.Call.Run(func(args mock.Arguments) {
		var arg0 error
		if args[0] != nil {
			arg0 = args[0].(error)
		}
		run(
			arg0,
		)
	})
	return _c
}

func (_c *MockModalManagerInterface_ShowError_Call) Return() *MockModalManagerInterface_ShowError_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockModalManagerInterface_ShowError_Call) RunAndReturn(run func(err error)) *MockModalManagerInterface_ShowError_Call {
	_c.Run(run)
	return _c
}

// ShowHelp provides a mock function for the type MockModalManagerInterface
func (_mock *MockModalManagerInterface) ShowHelp() {
	_mock.Called()
	return
}

// MockModalManagerInterface_ShowHelp_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ShowHelp'
type MockModalManagerInterface_ShowHelp_Call struct {
	*mock.Call
}

// ShowHelp is a helper method to define mock.On call
func (_e *MockModalManagerInterface_Expecter) ShowHelp() *MockModalManagerInterface_ShowHelp_Call {
	return &MockModalManagerInterface_ShowHelp_Call{Call: _e.mock.On("ShowHelp")}
}

func (_c *MockModalManagerInterface_ShowHelp_Call) Run(run func()) *MockModalManagerInterface_ShowHelp_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockModalManagerInterface_ShowHelp_Call) Return() *MockModalManagerInterface_ShowHelp_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockModalManagerInterface_ShowHelp_Call) RunAndReturn(run func()) *MockModalManagerInterface_ShowHelp_Call {
	_c.Run(run)
	return _c
}
